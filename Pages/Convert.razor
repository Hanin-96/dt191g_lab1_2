@page "/convert"

<h1>Konvertering</h1>

<div class="convert-wrap">
    <div>
        <label for="meterInput">Meter:</label>
        <input id="meterInput" type="number" @bind="@inputMeter" @oninput="ConvertFeet" />

    </div>

    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!--!Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.--><path d="M406.6 374.6l96-96c12.5-12.5 12.5-32.8 0-45.3l-96-96c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224l-293.5 0 41.4-41.4c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-96 96c-12.5 12.5-12.5 32.8 0 45.3l96 96c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.3 288l293.5 0-41.4 41.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0z" /></svg>

    <div>
        <label for="fotInput">Fot:</label>
        <input id="fotInput" type="number" @bind="@inputFoot" @oninput="ConvertMeter" />

    </div>
</div>


<div class="convert-wrap">
    <div>
        <label for="km-h">Km/h:</label>
        <input id="km-h" type="number" @bind="@inputKilometres" @oninput="ConvertKilometres" />

    </div>

    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512"><!--!Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.--><path d="M406.6 374.6l96-96c12.5-12.5 12.5-32.8 0-45.3l-96-96c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224l-293.5 0 41.4-41.4c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-96 96c-12.5 12.5-12.5 32.8 0 45.3l96 96c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.3 288l293.5 0-41.4 41.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0z" /></svg>

    <div>
        <label for="miles-h">Miles/h:</label>
        <input id="miles-h" type="number" @bind="@inputMiles" @oninput="ConvertMiles" />

    </div>
</div>



@code {
    private double inputMeter = 0;
    private double inputFoot = 0;
    private double footValue = 0.3048;
    private double milesValue = 0.6213711922;
    private double inputMiles = 0;
    private double inputKilometres = 0;


    //Konvertera till meter
    private void ConvertMeter(ChangeEventArgs e)
    {
        //Tar emot värdet från event, konverterar till double och lagrar värdet
        if (double.TryParse(e.Value?.ToString(), out double inputFoot) && inputFoot > 0)
        {
            //Gör beräkningen
            inputMeter = Math.Round(inputFoot * footValue, 2);
        }
        else
        {
            inputMeter = 0;
        }
    }

    //Konvertera till foot
    private void ConvertFeet(ChangeEventArgs e)
    {
        //Tar emot värdet från event, konverterar till double och lagrar värdet
        if (double.TryParse(e.Value?.ToString(), out double inputMeter) && inputMeter > 0)
        {
            inputFoot = Math.Round(inputMeter / footValue, 2);
        }
        else
        {
            inputFoot = 0;
        }

    }

    //Konvertera till Miles/h
    private void ConvertKilometres(ChangeEventArgs e)
    {
        //Tar emot värdet från event, konverterar till double och lagrar värdet
        if (double.TryParse(e.Value?.ToString(), out double inputKilometres) && inputKilometres > 0)
        {
            inputMiles = Math.Round(inputKilometres * milesValue, 2);
        }
        else
        {
            inputMiles = 0;
        }

    }

    //Konvertera till km/h
    private void ConvertMiles(ChangeEventArgs e)
    {
        //Tar emot värdet från event, konverterar till double och lagrar värdet
        if (double.TryParse(e.Value?.ToString(), out double inputMiles) && inputMiles > 0)
        {
            inputKilometres = Math.Round(inputMiles / milesValue, 2);
        }
        else
        {
            inputKilometres = 0;
        }

    }
}
